FROM golang:1.5.1

{{ assert .Version }}
{{ $stable := "0.2.3" }}
{{ $beta := "0.2.4" }}
{{ $v1 := "1." }}

ADD . /go/src/github.com/grammarly/rocker
WORKDIR /go/src/github.com/grammarly/rocker

ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1

{{ if .test }}
MOUNT /var/run/docker.sock:/var/run/docker.sock
{{ if .TestArgs }}
ENV TESTARGS="{{ .TestArgs }}"
{{ end }}
ATTACH ["bash"]
RUN make test
{{ end }}

ATTACH ["bash"]

RUN \
  TIME=$(TZ=GMT date "+%Y-%m-%d_%H:%M_GMT") \
  go build \
    -a -installsuffix cgo \
    -ldflags "-X main.Version={{ .Version }} -X main.GitCommit=$commit -X main.GitBranch=$branch -X main.BuildTime=$TIME" \
    -v -o /bin/rocker

EXPORT /bin/rocker

#========

FROM alpine:3.2

RUN apk --update add git bash

RUN mkdir -p /opt/rocker/bin
IMPORT rocker /opt/rocker/bin

VOLUME ["/opt/rocker/bin"]

WORKDIR /context

ENV PATH=/opt/rocker/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

CMD ["/opt/rocker/bin/rocker"]

PUSH dockerhub.grammarly.io/rocker:{{ .Version }}

{{ if hasPrefix .Version $stable }}
  PUSH dockerhub.grammarly.io/rocker:stable
{{ else if hasPrefix .Version $beta }}
  PUSH dockerhub.grammarly.io/rocker:beta
{{ else if hasPrefix .Version $v1 }}
  PUSH dockerhub.grammarly.io/rocker:v1
{{ end }}
