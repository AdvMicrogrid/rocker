FROM golang:1.5.1

{{ $commit := (or .Env.GIT_COMMIT "") }}
{{ $branch := (or .Env.GIT_BRANCH "") }}
{{ $version:= (or .Version "local") }}

ADD . /go/src/github.com/grammarly/rocker
WORKDIR /go/src/github.com/grammarly/rocker

ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1

{{ if .test }}
MOUNT /var/run/docker.sock:/var/run/docker.sock
{{ if .TestArgs }}
ENV TESTARGS="{{ .TestArgs }}"
{{ end }}
ATTACH ["bash"]
RUN make test
{{ end }}

ATTACH ["bash"]

RUN \
  go build \
    -a -installsuffix cgo \
    -ldflags "-X main.Version={{$version}} -X main.GitCommit={{$commit}} -X main.GitBranch={{$branch}} -X main.BuildTime=$(TZ=GMT date '+%Y-%m-%d_%H:%M_GMT')" \
    -v -o /bin/rocker

EXPORT /bin/rocker

#========

FROM alpine:3.2

RUN apk --update add git bash

RUN mkdir -p /opt/rocker/bin
IMPORT rocker /opt/rocker/bin

VOLUME ["/opt/rocker/bin"]

WORKDIR /context

ENV PATH=/opt/rocker/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

CMD ["/opt/rocker/bin/rocker"]

{{ if $version }}
    {{ if $branch }}

        PUSH dockerhub.grammarly.io/rocker:{{ $branch }}-{{ $version }}
        PUSH dockerhub.grammarly.io/rocker:{{ $branch }}

    {{ end }}
{{ end }}

